# Tutorials based on https://laracasts.com/series/learn-vue-3-step-by-step/episodes/2
 #Vue 3

  ## Episode 1. Vue Basics
    The tutorials tells about the how vue on script tags works
      <script scr="https://unpkg.com/vue@3"></script>
      
      and the Vue code structure in Vue Script tag
        Vue.createApp({
          data(){
            return {
             --------
            }
            methods: {
              
            }
            
          }
        })
        
        vue models and double curly braces works
        
        
  ## Episode 2. Attribute binding and Event
    THe code is similar as vue attribute binding and Event in vue 2. The attribute binding means the html attribute like class, id, value changes using
    `v-binding:class="vue-data-value` and events using v-on:click="method-name"
    
    
  ## Episode 3. Lists and Computed Properties 
   In this episode the v-for attribute must have :key attribute to get ride from the issue (clicking one item affect the other). Must be the primary key of the list.
   Order of the array might change if not mention :key attribute in for loop
   
  ## episode 4. Your first custom Vue Component
   component are reusable vue code. The component have same properties, option, methods as vue property. The custom vue component can be named as 'component-name'
   and can be included with slot(the custom code by html code)
    
 ## episode 5. One vue component per file
   We have learned about how each One vue component can be stored with on its own file.
   
   
 ## episode 6. Component props
  The data communication between parent to child is done throgh props
  ### the props the defined in the child using props object
  props: {
    passing-data-variable: {
     type: data-type,
     default: default-value
    }
  }
  
  ### the custom tag in parent and value is accessed as attribute and 
   <custom-tag :passing-data="parent-variable"></custom-tag>
   
   
 ## episode 7 Bring it all together
 
 ## episode 8 Handle a form submission
  The episode showing the child passing data to parent using $emit funtion in the child to pass data to the parent. 
  ### the child 
  // emit the vue function so precedding function by $
  this.$emit('emit_function_name', passing_value )
  
  ### the parent
  in the custom tag the code be like
  <custom-tag @click="emit_function"></custom-tag>
  
  emit_function(passing_value){
   ---------
  }
  
 # Eoisode 16
 ## Installing vite 
  `npm init vue@latest`
 # vue router routes, creating links, history management, scroll position, memory 
 ## .vue file is a single file component containing scripts, templates and styles tags on its own


# Episode 17
 @ symbol in path means an alias which is the defining the path directory
 
# Episode 18
 Before this episode we are learning about options api but from onward we are learning composition api
 Composition APIs primarily used together iwth <script setup> syntax in Single-File components.
  Composition API is a set of APIs that allows us to author Vue components using imported functions instead of declaring options.
  It covers reactivity api(state, computed state and watchers) and lifecycle hooks(component lifecycle), dependency injection(allow us to leverage Vue's dependency injection)
  system while using Reactivity APIs.
Composition APIs comes into play to remove messy code between the components


# Episode 19
 ## Mixins
  The mixins simply means a components like js file which is imported and code is reused using import and used using mixins: [import_name]
  The composables means same as mixins but when large mixin the ide can identify the fucntion and variable defined in composables(keep track of the method and funciton in composables)
