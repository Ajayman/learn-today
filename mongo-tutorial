# Mongo Introduction
It is a document oriented database management system and works on document based database.
Mondodb stores data in form of documents.
Mongodb uses bson(binary json) format data to store databse which is optimized for speed, space and flexibility.
Store in table in RDBMS but in MongoDb stores in collection(array) and each row in table as document and column in RDBMS but in mongo it is called fields

## 1 create databse, collections, document
#### create database
  `use jaysoft` [to create database and switch to it]
  
### show available databse
  `show dbs`
  
### to view collection on current database
  `show collections`
  
### to view document 
  `db.jaysoft.find()`
  
### to show document in pretty format from the database
    `db.jaysoft.find().pretty()`

## 2. CRUD
db.collection_name.insertOne() => inserting only one document
db.colleciton_name.insertMany() => inserting many document at a single time

### to view which database is currently active
  `db`
  
### to insert one document 
  `db.jaysoft.insertOne({})`
  
### to insert multiple document
  `db.jaysoft.insertMany`
  
## 3 Read ir queries
 
 ### Retrive certain document
 `db.jaysoft.find(query, projection)`
 example: db.jaysoft.find({name: "MongoDB"})
 
 ### retrive certain field of certain document
  `db.jaysoft.find({name: "MongoDB", {_id: 0, name:1}})`
 
 ### retrive first document with field name and value match
  `db.jaysoft.find({active:true}).pretty()`
  
### retrieve only one document with certain field and value but skipping first one
  `db.jaysoft.find({active:true}).pretty().limit(1).skip(1)`
  
  
 ## 4. Update Operation
  UpdateOne() => db.Collection_name.updateOne(<filter>,<update>)
    `db.jaysoft.updateOne({name:"Javascript"}, {$set: {type: "Full Stack"}})`
    
  UpdateMany() => db.colleciton.name.update(<filter>, <update>)
    `db.jaysoft.updateMany({active:true}, {$set: {type: "full stack"}})`
    
 ## 5. delete document with deletion criteria
  `deleteMany() => db.collection_name.deleteMany(Deletion_criteria)`
  
  delete collection
    `db.collection_name.deleteMany({})`
    
    
 Mongo Compass for GUI operation for easy access rather than mongo shell on CMD
 
 Mongoose => framework for establishing connection between nodejs, express js to mongo
 
 Mongoose is an Object Data Modeling(ODM) library for MongoDB and Node.js. It manages relationships between data, provides schema validation, and is used to translate between
 objects in code and the representation of those objects in MongoDB.
 
 
 ## 6. Mongoose schema and models explanation and create collection using mongoose
  After installation of mongoose connect with the db using
    `mongoose. connect("database_path")`
    
 // schema
 // A Mongoose schema defines the structure of the document,
 // default values, validators, etc.,
  
  
 //A Mongoose model is a wrapper on the Mongoose schema.
// A Mongoose schema defines the structure of the document,
// default values, validators, etc., whereas a Mongoose model 
// provides an interface to the database for creating,
// quering, updating, deleting records, etc.

// collection creation
// new mongoose.model("collection_name", schema_instance)

//create document or insert
`const createDocument = async() => {
   try{
      }catch{}
`

//getDocument
`
const getDocument = async () => {
    const result = await Fabriclist.find({color:"Red"});
    console.log(result);
}
`
## mongoose query operators
$gt means greater than operator
$gte means greater than or equals to
  `documents.find({color: "Red", price: {$gt: 500}})`


## mongoose logical operators
$and And operaotrs
$or Or operators
  `documents.find($and :  [{color:"Red", price: {$gt: 500}}])`
  
  
## npm validator
  ### install npm package using
  `npm i validator`
  
  ### for date validation, validate schema using 
  `
  validate(value){
    if(!validator.isDate(value)){
      throw new Error("Date is Invalid")
    }
  }
  
  `
## Rest API Postman
  Postman is an interactive an automatic tool for verifying the APIs of your project. Post is a Google Chrome aapp for interacting with HTTP APIs. 
  It presents you with a friendly GUI for constructing request and reading responses. It works on the backend,m and makes sure that each API is woring as intendded.



## REST API
  It is a short form of Representational State Transfer Application Programming Interface
  It is a software that allows two applicaitons to communicate with each other over the internet and through various devices. Everu time you access an app like facebbok or check the weather on your smartophone, an 
  API is used. 
  A Restful API is an architectural style for an application program interface that uses HTTP requests to access and use data. REST is  not a programming language.
  
  request server through get, post, patch/put, delete
  
  ### for singular create form
  `http://ajaysoft.com/api/user (post verb)`
  ### for reading multiple user 
  `http://ajaysoft.com/api/users (get verb)`
  ### for updating user 
  `http://ajaysoft.com/api/users (patch verb)`
  ### for delete user 
  `http://ajaysoft.com/api/user (delete verb)`
 
  
  
  ## As per the REST architecture, the server does not store any state about the client session on the server-side. Statelessness means every HTTP request happens in complete
  isolation. When the client makes an HTTP request, it includes all information necessary for the server to fulfill that request.
