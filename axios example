 methods: {
            getStorePos(uuid) {
                axios({
                    method: "GET",
                    headers: {Authorization: `Token ${this.token}`},
                    url:
                        "http://kasi.localhost:8001/api/v1/store/stores/" +
                        uuid +
                        "/pos-registers/data/"
                })
                    .then(
                        function (response) {
                            this.posRegisterList = response.data;
                        }.bind(this)
                    )
                    .catch(function (error) {
                        console.log(error);
                    });
            },
            showPosRegister() {
                this.showPosRegisterSelect = false;
            },
            cancelDialog() {
                this.settingVisible = false;
                this.showFloorSelect = false;
                this.showFloorSectionSelect = false;
                this.showPosRegisterSelect = false;
                this.getEmployeeSetting(this.employeeeDetail.user.uuid);
            },
            filterFloorSection(uuid) {
                this.showFloorSectionSelect = false;
                this.showPosRegisterSelect = true;
                this.update_employee.selectedFloorSection = 'Select FloorSection';
                this.update_employee.selectedPosRegister = 'Select Pos Register';
                this.floorSectionList = this.restaurantData.restaurant_floor_sections.filter(
                    function (floor_section) {
                        return floor_section.floor_uuid === uuid;
                    }
                );
            },
            filterFloor(uuid) {
                this.showFloorSelect = false;
                this.showFloorSectionSelect = true;
                this.showPosRegisterSelect = true;
                this.update_employee.selectedFloor = 'Select Floor';
                this.update_employee.selectedFloorSection = 'Select Floor Section';
                this.update_employee.selectedPosRegister = 'Select Pos Register';
                this.floorList = this.restaurantData.restaurant_floors.filter(function (
                    floor
                ) {
                    return floor.building_uuid === uuid;
                });
            },
            filterBuilding(uuid) {
                this.showFloorSelect = true;
                this.showFloorSectionSelect = true;
                this.showPosRegisterSelect = true;
                this.count++;
                this.update_employee.selectedBuilding = 'Select Building';
                this.update_employee.selectedFloor = 'Select Floor';
                this.update_employee.selectedFloorSection = 'Select Floor Section';
                this.update_employee.selectedPosRegister = 'Select Pos Register';
                this.getStoreData(this.update_employee.selectedStore);
                this.buildingList = this.restaurantData.restaurant_buildings.filter(
                    function (building) {
                        return building.building_uuid === uuid;
                    }
                );
            },
            filterData() {
                var vue = this;
                if (vue.update_employee.selectedStore) {
                    if (vue.update_employee.selectedBuilding) {
                        vue.floorList = vue.restaurantData.restaurant_floors.filter(function (
                            floor
                        ) {
                            return floor.building_uuid === vue.update_employee.selectedBuilding;
                        });
                        if (vue.update_employee.selectedFloor) {
                            vue.floorSectionList = vue.restaurantData.restaurant_floor_sections.filter(
                                function (floor_section) {
                                    return floor_section.floor_uuid === vue.update_employee.selectedFloor;
                                }
                            );
                        }
                    }
                }
                vue.getStorePos(vue.update_employee.selectedStore);
            },
            getStoreData(uuid) {
                axios({
                    method: "GET",
                    headers: {Authorization: `Token ${this.token}`},
                    url:
                        "http://kasi.localhost:8001/api/v1/store/stores/" +
                        uuid +
                        "/restaurant/data/"
                })
                    .then(
                        function (response) {
                            this.buildingList = response.data.restaurant_buildings;
                            this.floorList = response.data.restaurant_floors;
                            this.floorSectionList = response.data.restaurant_floor_sections;
                            this.restaurantData = response.data;
                            // if (this.count == 1) {
                                this.filterData();
                            // }
                        }.bind(this)
                    )
                    .catch(function (error) {
                        console.log(error);
                    });
            },
            updateEmployeeSettings(uuid, formvalid) {
                var vue = this;
                this.$refs[formvalid].validate((valid) => {
                    if (valid) {
                        axios({
                            method: "PUT",
                            headers: {Authorization: `Token ${this.token}`},
                            url:
                                "http://kasi.localhost:8001/api/v1/employee/employee-restaurant-settings/" +
                                uuid +
                                "/update/",
                            data: {
                                primary_pos_register: vue.update_employee.selectedPosRegister,
                                primary_restaurant_building: vue.update_employee.selectedBuilding,
                                primary_restaurant_floor: vue.update_employee.selectedFloor,
                                primary_restaurant_floor_section: vue.update_employee.selectedFloorSection,
                                primary_store: vue.update_employee.selectedStore
                            }
                        })
                            .then(function (response) {
                                if (response.data) {
                                    vue.$message("Updated Employee Setting Successfully");
                                }
                            })
                            .catch(error => {
                                vue.$message(JSON.stringify(error.response.status));
                                vue.$message(JSON.stringify(error.response.data));
                            });
                    }
                    else{
                        console.log('error submit')
                        return false;
                    }
                });

            },
            getEmployeeSetting(uuid) {
                this.showSelect = false;
                // axios({
                //     method: "GET",
                //     headers: {Authorization: `Token ${this.token}`},
                //     url:
                //         "http://kasi.localhost:8001/api/v1/employee/employee-restaurant-settings/" +
                //         uuid +
                //         "/"
                // })
                this.$http
                    .get({url: employeeApiUrls.getEmployeeSetting(uuid)})
                    .then(
                        function (response) {
                            this.update_employee.selectedStore = response.data.primary_store.uuid;
                            this.update_employee.selectedBuilding =
                                response.data.primary_restaurant_building.uuid;
                            this.update_employee.selectedFloor = response.data.primary_restaurant_floor.uuid;
                            this.update_employee.selectedFloorSection =
                                response.data.primary_restaurant_floor_section.uuid;
                            this.update_employee.selectedPosRegister = response.data.primary_pos_register.uuid;
                            this.showFloorSectionSelect = false;
                            this.showPosRegisterSelect = false;
                            this.getStoreList(response.data.primary_store.uuid);
                        }.bind(this)
                    )
                    .catch(function (error) {
                        console.log(error);
                    });
            },
            getStoreList(uuid) {
                axios({
                    method: "GET",
                    headers: {Authorization: `Token ${this.token}`},
                    url: "http://kasi.localhost:8001/api/v1/store/stores/"
                })
                    .then(
                        function (response) {
                            this.storeList = response.data.results;
                            this.getStoreData(uuid);
                        }.bind(this)
                    )
                    .catch(function (error) {
                        console.log(error);
                    });
            },
            submitEmployeeSetting(user_uuid) {
                this.settingVisible = true;
                this.getEmployeeSetting(user_uuid);
            },
