Vue learned so far
  **Components
  **Props
  **Conditional(If else)
  **loops
  **CRUD in API
  **Form
  **V-bind
  **V-model
  **SPA
  **Events

VUe Instance
  ** data and method
  ** Object freeze
  ** $ is used to define vue property 
  ** life cycle created, mounted, destroyed
  
  
Class and style binding
  ** changing the element attribute in class, inline style 
  eg. v-bind: class="" , v-bind: style=""
  
List rendering
  v-for -> iterate the item and index of current item eg v-for = "(item, index) in items" (aplied for array)
  v-for -> v-for = "(value, name) in items" (applied for object)
  v-for -> v-for = "(value, name, index) in items" (aplied for object rendering index too)
  
Component
  Reusable vue instance with a name
    -> eg.  Vue.compoent('name', {
             data: function(){
              return{
               count: 0
              }
             },
             template: '<button v:on click= "count++">You clicked me {{ count }} times.</button>'
           })

Nested Components
  here nested components means the child components is declared in a parent components. 

Props: 
  when parent component needs to transfer data to child component the props is used in child data and child component is nested 
  in parent use bind name (:bindname = 'dataname') in the template and access by child template using 

Installation
 vue cli and vue project run
 
   npm install -g @vue/cli    -> installing vue/cli will make use of vue command
   vue create project_name    -> will install necessay file to execute vue 

axios(promised based http client)
  npm install axios
  
element ui
  npm install element-ui -S
  
