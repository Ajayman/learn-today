Vue learned so far
  **Components
  **Props
  **Conditional(If else)
  **loops
  **CRUD in API
  **Form
  **V-bind
  **V-model
  **SPA
  **Events

VUe Instance
  ** data and method
  ** Object freeze
  ** $ is used to define vue property 
  ** life cycle created, mounted, destroyed
  
  
Class and style binding
  ** changing the element attribute in class, inline style 
  eg. v-bind: class="" , v-bind: style=""
  
List rendering
  v-for -> iterate the item and index of current item eg v-for = "(item, index) in items" (aplied for array)
  v-for -> v-for = "(value, name) in items" (applied for object)
  v-for -> v-for = "(value, name, index) in items" (aplied for object rendering index too)
  
Component
  Reusable vue instance with a name
    -> eg.  Vue.compoent('name', {
             data: function(){
              return{
               count: 0
              }
             },
             template: '<button v:on click= "count++">You clicked me {{ count }} times.</button>'
           })

Nested Components
  here nested components means the child components is declared in a parent components. 

Props: 
  when parent component needs to transfer data to child component the props is used in child data and child component is nested 
  in parent use bind name (:bindname = 'dataname') in the template and access by child template using 

Installation
 vue cli and vue project run
 
   npm install -g @vue/cli    -> installing vue/cli will make use of vue command
   vue create project_name    -> will install necessay file to execute vue 

axios(promised based http client)
  npm install axios
  
element ui
  npm install element-ui -S
  
Data passing from parent to child using (prop)
  when data is passed from parent to child using prop and binding. The child can access the parent data but cannot change the 
  data of the parent from child component. I cause a mutating error if we tried to change from child component

Data passing from child to parent using ($emit)
 when data changed in child the event is triggered in child which the event is passed and parent shows an effect 

Vue Router 
  To access vue router properties we need to install vue-router 
    To install -> npm install vue-router
   A official vue routing mechanism 
    
Vue API        https://riptutorial.com/vue-js/example/32039/using-vue--set
   Vue.$set(target, propertyName/index, value) ==> this will update the server response(value) to the vue instance array or object
   here,
     target => Object or array
     propertyName/index ==> string/number
     value ==> the response data
     
     
Slot           https://medium.com/binarcode/understanding-scoped-slots-in-vue-js-db5315a42391

  slot means add place or properties to components
   for example: button.vue (a button component) can be customized text, markup like icon 
   Tag is: <slot> </slot>(inside any tags)
   
   scoped-slot similar properties with slot 
   
   watch -> A Vue watcher allows you to listen to the component data and run whenever a particular 
   property changes. A watcher is a special Vue.js feature that allows you to spy on one property of 
   the component state, and run a function when that property value changes
   
   Access external json in vue
     just import json file using //import json from 'file/path'//
      use it normally in script tag
